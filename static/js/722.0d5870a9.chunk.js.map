{"version":3,"file":"static/js/722.0d5870a9.chunk.js","mappings":"wNAGaA,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAOLE,EAAMF,EAAAA,GAAAA,OAAH,yI,kBCfHG,EAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACzB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACE,UAACR,EAAD,YAEE,SAACE,EAAD,CACEO,KAAK,OACLC,SAAU,SAAAC,GAAC,OAbA,SAAAA,GACfH,EAAcG,EAAEC,OAAOC,MACxB,CAWoBH,CAASC,EAAb,KAGb,SAACR,EAAD,CAAKM,KAAK,SAASK,QAZR,WACTT,EAAeE,EACpB,EAUG,sBAIL,E,2BC8BD,EAjDe,WAAO,IAAD,EACjB,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAI,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACpCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACDJ,GAKJK,EAAAA,EAAAA,IAAUL,GAAMM,MAAK,SAAAC,GAAQ,OAC1BX,EAASW,EAASC,KAAKC,QADG,IAJ1Bb,EAAS,KAShB,GAAE,CAACI,IAEJ,IAAMU,EAAW,SAACjB,GACdM,EAA0B,KAAVN,EAAe,CAACkB,MAAOlB,GAAS,CAAC,EAEpD,EACD,OAAKE,GASD,4BACM,SAAC,KAAD,KACF,SAACX,EAAD,CAAYC,eAAgByB,KAC5B,8BAAMf,EAAMiB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACvB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMf,GAA1C,SACGY,KAFID,EAMZ,WAlBP,4BACQ,SAAC,KAAD,KACA,SAAC7B,EAAD,CAAWC,eAAgByB,MAqBtC,C","sources":["components/SearchBox/searchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\n\nexport const Btn = styled.button`\npadding: 8px 32px 8px 8px;\nborder-radius: 4px;\nbackground-color: orangered;\ncolor: white;\n\nfont-size: 13px\n`;\n\n","import { Wrapper, Input, Btn} from \"components/SearchBox/searchBox.styled.js\"\nimport { useState } from \"react\";\n\nexport const SearchBox = ({sendSearchName}) => {\n  const [searchName, setSearchName] = useState('');\n  \n  const onChange = e => {\n    setSearchName(e.target.value);\n  };\n\n    const send = () => {\n        sendSearchName(searchName);\n  };\n \n  return (\n    <Wrapper>\n    \n      <Input\n        type=\"text\"\n        onChange={e => onChange(e)}\n     \n      />\n      <Btn type=\"button\" onClick={send}>Search</Btn>\n      \n    </Wrapper>\n  );\n};\n","import { SearchBox } from \"components/SearchBox/SearchBox.jsx\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { getSearch } from \"Services/services\";\nimport { useState } from \"react\";\nimport { Link, useLocation, Outlet  } from \"react-router-dom\";\n\nconst Movies = () => {\n    const [movie, setMovie] = useState(null)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const name = searchParams.get(\"query\") ?? \"\";\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!name) {\n            setMovie(null);\n            return;\n        }\n\n         getSearch(name).then(response => \n            setMovie(response.data.results)\n\n         )\n       \n    }, [name]);\n\n    const onSearch = (value) => {\n        setSearchParams(value !== '' ? {query: value} : {})\n        \n    }\n    if (!movie) {\n        return (\n    <div>\n            <Outlet />\n            <SearchBox sendSearchName={onSearch} />\n            </div>\n        );\n      }\n    return (\n        <div>\n              <Outlet/> \n            <SearchBox  sendSearchName={onSearch}/>\n            <ul> {movie.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n               </div>\n    )\n\n}\nexport default Movies;"],"names":["Wrapper","styled","Input","Btn","SearchBox","sendSearchName","useState","searchName","setSearchName","type","onChange","e","target","value","onClick","movie","setMovie","useSearchParams","searchParams","setSearchParams","name","get","location","useLocation","useEffect","getSearch","then","response","data","results","onSearch","query","map","id","title","to","state","from"],"sourceRoot":""}